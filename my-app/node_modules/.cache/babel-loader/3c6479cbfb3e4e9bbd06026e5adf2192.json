{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMIT SHAH\\\\projects\\\\student_system\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport jwt from \"jsonwebtoken\";\nconst jwt_secret = \"xsrHWRQStAHvOd4Eqe7tXvtKWCgFtkOhSXmmHtLNGVEvnOWAaWGMVtIVWnB8DBjC\";\nlet token = localStorage.getItem('token');\n\nif (token) {\n  jwt.verify(token, jwt_secret, (err, decoded) => {// if (err) {\n    //   localStorage.removeItem(\"token\");\n    //   token = null;\n    // } else {\n    //   if (decoded.iss !== \"http://localhost:6000/api/users/login\") {\n    //     localStorage.removeItem(\"token\");\n    //     token = null;\n    //   }\n    // }\n  });\n}\n\nconst render = () => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  })), document.getElementById(\"root\"));\n};\n\nif (token) {\n  // axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  // axios.post(\"http://localhost:6000/api/users/profile\").then(res => {\n  //   store.dispatch({ type: \"SET_LOGIN\", payload: res.data });\n  //   render();\n  // });\n  // fetch('http://localhost:6000/api/users/profile', {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\":`${token}`\n  //     }\n  //   })\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         localStorage.setItem(\"token\", result.token);\n  //         localStorage.setItem(\"user\", JSON.stringify(result.user));\n  //         this.props.setLogin(result.user);\n  //         this.props.history.push(\"/home\");\n  //       },\n  //       (error) => {\n  //         console.log(error);\n  //       }\n  //     )\n  //     .catch(err => {\n  //       this.setState({ errors: err });\n  //     });\n  render();\n} else {\n  render();\n} // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/AMIT SHAH/projects/student_system/my-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","store","Provider","jwt","jwt_secret","token","localStorage","getItem","verify","err","decoded","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,6CAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,MAAMC,UAAU,GACd,kEADF;AAEA,IAAIC,KAAK,GAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;;AACA,IAAIF,KAAJ,EAAW;AACTF,EAAAA,GAAG,CAACK,MAAJ,CAAWH,KAAX,EAAkBD,UAAlB,EAA8B,CAACK,GAAD,EAAMC,OAAN,KAAkB,CAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAVD;AAWD;;AAED,MAAMC,MAAM,GAAG,MAAM;AACnBb,EAAAA,QAAQ,CAACa,MAAT,eACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAMD,CAPD;;AAQA,IAAIR,KAAJ,EAAW;AACT;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAM,EAAAA,MAAM;AAEP,CAhCD,MAgCO;AACLA,EAAAA,MAAM;AACP,C,CAED;AACA;AACA;;;AACAX,aAAa,CAACc,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport '../node_modules/bootstrap/dist/js/bootstrap';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport jwt from \"jsonwebtoken\";\nconst jwt_secret =\n  \"xsrHWRQStAHvOd4Eqe7tXvtKWCgFtkOhSXmmHtLNGVEvnOWAaWGMVtIVWnB8DBjC\";\nlet token =localStorage.getItem('token');\nif (token) {\n  jwt.verify(token, jwt_secret, (err, decoded) => {\n    // if (err) {\n    //   localStorage.removeItem(\"token\");\n    //   token = null;\n    // } else {\n    //   if (decoded.iss !== \"http://localhost:6000/api/users/login\") {\n    //     localStorage.removeItem(\"token\");\n    //     token = null;\n    //   }\n    // }\n  });\n}\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\nif (token) {\n  // axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  // axios.post(\"http://localhost:6000/api/users/profile\").then(res => {\n  //   store.dispatch({ type: \"SET_LOGIN\", payload: res.data });\n  //   render();\n  // });\n\n  // fetch('http://localhost:6000/api/users/profile', {\n  //     method: 'GET',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       \"Authorization\":`${token}`\n  //     }\n  //   })\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         localStorage.setItem(\"token\", result.token);\n  //         localStorage.setItem(\"user\", JSON.stringify(result.user));\n  //         this.props.setLogin(result.user);\n  //         this.props.history.push(\"/home\");\n  //       },\n  //       (error) => {\n  //         console.log(error);\n  //       }\n  //     )\n  //     .catch(err => {\n  //       this.setState({ errors: err });\n  //     });\n\n  render();\n\n} else {\n  render();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}